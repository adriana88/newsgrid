/*we create some variables so taht we can use them in the layout later*/
:root{
    --prmiary-color:#c72727; 
    --secondary-color:#f99500; 
    --light-color: #f3f3f3;
    --dark-color: #333;
    --max-width: auto;
}

.category {
    --sports-color:#f99500; 
    --ent-color: #a66bbe;
    --tech-dolor: #009cff;
}

*{
    margin:0;
    padding:0;
    box-sizing: border-box;
}

body{
    font-family: 'Lato', sans-serif;
    line-height: 1.5;
    background: var(--light-color);
}

a {
    color: #333;
    text-decoration: none;
}

ul{
    list-style: none;
}

p{
    margin: 0.5rem 0;
}

img{
    width:100%; /*so that images do not come out of their containers*/
    }

h1,h2,h3,h4,h5,h6 {
font-family: 'Staatliches', cursive;
margin-bottom: .55rem;
line-height: 1.3;
}

/*Utility styling*/


.container {
    max-width: var(--max-width); /*otherwise the image will stretch accross the whole page*/
    margin: auto;
    padding: 0 2rem;
    overflow:hidden;
}

.category {
    display:inline-block;
    color:white;
    font-size: 0.55rem;
    text-transform: uppercase;
    padding: 0.4rem 0.6rem; 
    border-radius: 15px;
    margin-bottom: 0.5rem;
}

.category-sports{
    background: var(--sports-color) /*sports article will have orange button above*/
}

.category-ent{
    background: var(--ent-color);
}

.category-tech{
    background: var(--tech-dolor);
}

.btn{
    display:inline-block;
    border:none;
    background: black;
    color:white;
    padding: 0.5rem 1.5rem;
}

.btn-light{
    background: var(--light-color);
}
.btn-primary{
    background: var(--prmiary-color);
}
.btn-secondary{
    background: var(--secondary-color);
}

.btn:hover {
    opacity: 0.9;
}

.btn-block {display:block;
    width:100%;
    text-align: center; /*this is in case we want to have a big button later on. A button that goes all the way accross the page*/}


.card{ 
    background:white;
    padding:1rem;
}

.bg-dark{
    background: var(--dark-color);
    color:white;
}
.bg-primary{
    background: var(--prmiary-color);
    color:white;
}
.bg-secondary{
    background: var(--secondary-color);
    color:white;
}

.bg-dark h1,
.bg-dark h2,
.bg-dark h3,
.bg-dark a,
.bg-primary h1,
.bg-primary h2,
.bg-primary h3,
.bg-primary a,
.bg-secondary h1,
.bg-secondary h2,
.bg-secondary h3,
.bg-secondary a{
    color:white;
}

.py-1{
    padding:1.5rem 0;    
}
.py-2{
    padding:2rem 0;    
}
.py-3{
    padding:3rem 0;    
}

.p-1{padding: 1.5rem;}
.p-2{padding: 2rem;}
.p-3{padding: 3rem;}

.l-heading{font-size: 3rem;}


.list li{
padding: 0.5rem 0;
border-bottom: #555 dotted 1px;
width:90%;
}

.list li a:hover{
    color: var(--prmiary-color) !important; /*we need to add important as it was not working. We probably overwritten the style somewhere below*/
}

/*navbar*/

#main-nav{
    background: white;
    position:sticky; /*cause we want our navbar always on the top*/
    top: 0; /*navbar should start at the very top*/
    z-index: 2; /*what do these properties do???!!!!. Z-index will make sure that our navbar always stays on top of everything else*/
}


#main-nav .container {
    display:grid;
    grid-template-columns: 6fr 3fr 2fr; /*this will make the items appear next to each other, with logo being the bigger*/
    padding:1rem;
    align-items: center; /*it aligns items to the center vertically*/
}

#main-nav .logo {
    width: 180px; /*logo was too big*/
    
}

#main-nav ul{
    justify-self: end; /*home and about will be placed at the end of the container. So they will go to the very right corner*/
    display: flex; /*they will now be next to each other*/
}

#main-nav ul li a{
    padding:0.75rem;
    font-weight: bold; /*about*/
}

#main-nav ul li a.current{
    background: var(--prmiary-color);
    color:white; /*home button*/
}

#main-nav ul li a:hover{
    background: var(--light-color);
    color: var(--dark-color);
}

#main-nav .social{
    justify-self: center; /*icons styling*/
}
#main-nav .social i{
    color:#777;
    margin-right: .5rem;
}

/*showcase*/
#showcase{
    color:white;
    background: #333;
    padding: 2rem;
    position:relative; /*this is important bc we'll put our backgound picture on this background and the pic will be positioned absolute, so its containter - our dark background needs to be relative*/
    }

    #showcase:before{ /*we use before cause our picture will be before the background we set up above*/
        content:''; /*with before we always have to add content*/
        background: url('./img/articles/featured.jpg') no-repeat center center/cover;
        position:absolute; /*we are basically alying our picture on top of our showcase*/
        top:0;
        left:0; /*so our picture will start from top left corner*/
        width: 100%;
        height: 100%; /*without it the image not showing*/
        opacity: 0.4; /*for transparency*/
    }

    #showcase .showcase-container{
        display:grid;
        grid-template-columns: repeat(2, 1fr); /*we actually only have one item within this grid - our text but we want to keep ot only on the left half*/
        justify-content: center; /*for horizontal center within first half*/
        align-items: center; /*for vertical*/
        height:50vh;
    }

   .showcase-content { 
    z-index: 1; /*out text will now be in the first plane and it will be more visible -NOT WORKING*/
    }
    
#showcase .showcase-content p{
    margin-bottom: 1rem;
}


/*home articles*/

#home-articles .articles-container{
    display:grid;
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 1rem;
}

#home-articles .articles-container article:first-child,
#home-articles .articles-container article:last-child{ /*we want this first one to span a bit breiter*/
    display:grid;
    grid-template-columns: repeat(2, 1fr);
    grid-gap: 1rem;
    grid-column: 1 / span 2;
    align-items: center;
    
}

#home-articles .articles-container article:last-child{
    grid-column: 2 / span 2;
}

#home-articles .articles-container article:first-child img {
    padding:1rem;
}

/*footer*/

#main-footer{
    background: var(--dark-color);
    color:white;
    padding-top:1.5rem;
    }

#main-footer img{/*news grid image*/
    max-width: 150px;
}

#main-footer a{
    color:#fff;
    }

#main-footer .footer-container{
    display:grid;
    grid-template-columns: repeat(4, 1fr);
    grid-gap:1.5rem;
}

#main-footer .footer-container >*:last-child{ /*That's the one with all rights reserved. It's a 5th grid that spans all accross. iI has to be with * and I don't know why...*/
    background:#444;
    grid-column: 1 / span 4;
    padding:.5rem;
    text-align: center;
    font-size: 0.75rem;
}

#main-footer .footer-container input[type='email']{/*this is how we target email*/
    width:90%;
    padding:0.5rem;
    margin-bottom: 0.5rem;
}

#main-footer .footer-container input[type='submit']{ /*button submit should also be wider*/
    width:90%;
}

/*about page*/

.page-container{
    display:grid;
    grid-template-columns: 5fr 2fr; /*left side should be bigger, red window smaller*/
    margin: 3rem 0;
    grid-gap: 1.5rem;
}

.page-container >*:first-child{
    grid-row: 1 / span 3; /*this is this darker area at the bottom*/
}

#article .meta{ /*written by...*/
display:flex;
justify-content: space-between;
align-items: center;
background: #eee;
padding:0.5rem;}


#article .meta .category{
    margin-top: 0.4rem;
}

/*grid is perfect for placing elements within a website. Flex is good for aligning items within smaller elements.*/